import Head from "next/head"
import { useRouter } from "next/router"
import toast, { Toaster } from "react-hot-toast"
import { useEffect, lazy, useState } from "react"
import { useSession, getSession } from "next-auth/react"
import { CloudUploadIcon } from "@heroicons/react/outline"

import styles from "../styles/Form.module.css"
import { useAuth } from "../context/AuthContext"
import FormLayout from "../components/layouts/form_layout"
import NavBar from "../components/navigation/main_navbar"

import { openFileUploadDialog } from "../components/file_picker";

const Uploader = () => {
  const { data: session } = useSession()
  const router = useRouter()
  const { currentUser } = useAuth()

  const [loading, setLoading] = useState(false)
  const [loadingType, setLoadingType] = useState("")

  const handleVideoUpload = async () => {
    //const dbx = new Dropbox({ accessToken: process.env.NEXT_PUBLIC_DBX_ACCESS_TOKEN });

    openFileUploadDialog().then(event => {
      const file = (event.target.files || [])[0];
      console.log(file);
      if (file) {
        const objectUrl = URL.createObjectURL(file);

        /*dbx.filesUpload({ path: objectUrl })
          .then((response: any) => {
            console.log(response);
          })
          .catch((uploadErr: Error<files.UploadError>) => {

            toast.error(uploadErr.user_message.text);
            console.log(uploadErr);
          });*/
      } else {
        throw new Error("upload failed");
      }
    });
  }

  return (
    <div className="">
      <Head>
        <title>VidShop</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen md:h-screen">
        <NavBar />
        <FormLayout>
          <section className="flex flex-col gap-6 mx-auto md:w-3/4 2xl:gap-7">
            <div className="title items-center" onClick={handleVideoUpload}>
              <center><CloudUploadIcon
                className="h-7 w-7 dark:text-gray-800"
              /></center>
              <h3 className="text-2xl font-bold text-gray-800 md:py-4 md:text-2xl">
                Select a Video to Upload
              </h3>
              <p className="w-3/4 mx-auto mt-3 text-xs text-gray-400 md:w-full md:text-base">
                Or drag and drop a file.
              </p>
              <p className="w-1/4 mx-auto mt-2 text-xs text-gray-400 md:w-full md:text-base">
                Long videos can be split into multiple parts to get more exposure
              </p>
              <br />
              <p className="w-3/4 mx-auto mt-3 text-xs text-gray-400 md:w-full md:text-base">
                MP4 or WebM <br /> Up to 60 seconds <br /> Less than 500 MB
              </p>
              <br />
              <br />

              <div className="input-button">
                <button
                  className={`${styles.button} ${loading && "opacity-50"}`}
                  type="button"
                  onClick={handleVideoUpload}
                  disabled={loading}
                >
                  {loading && loadingType === "google" ? (
                    "loading..."
                  ) : (
                    <>
                      Select file
                    </>
                  )}
                </button>
              </div>
            </div>

          </section>
          <Toaster position="bottom-center" />
        </FormLayout>
      </main>
    </div>
  )
}

export default Uploader

export async function getServerSideProps({ req }: any) {
  const session = await getSession({ req })

  // if (!session) return { redirect: { destination: "/login", permanent: false } }

  return {
    props: { session },
  }
}
